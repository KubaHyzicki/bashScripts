#!/usr/bin/env bash
#_source

if [[ $1 == "--help" ]]
then
	echo "Search for file you would like to execute in current dir and runs it with given arguments
just type:		run [\$filename] [\$arg1] [\$arg2...]"
	exit
fi

chooseFile(){
#1st priority: run.sh , then run
	if [[ "`ls | grep -E '^run(.sh)?$'`" ]];then 
		echo "bash `ls | grep -E '^run(.sh)?$' | tail -1`"
		return
	fi

#2nd priority: make
	if [[ `ls | grep -E '^Makefile'` ]];then 
		echo "make"
		return
	fi

#3rd priority: bash shebang
	for file in `find . -maxdepth 1 -type f | sed -E 's/^.\///g'`;do
		if [[ `cat ${file} | head -1 | grep -E '^#!/usr/bin/env bash$'` ]];then
			echo "./${file}"
			return
		fi
	done

#4th priority: python shebang
	for file in `find . -maxdepth 1 -type f | sed -E 's/^.\///g'`;do
		if [[ `cat ${file} | head -1 | grep -E '^#!/usr/bin/python3?$'` ]];then
			echo "./${file}"
			return
		fi
	done

#5th priority: file .sh
	tmp=`ls | grep -E "^.*\.sh$" | head -1`
	if [[ $tmp ]];then echo "bash ${tmp}"; return;fi

#6th priority: file .py (assuming python3 over python)
	tmp=`ls | grep -E "^.*\.py$" | head -1`
	if [[ $tmp ]];then echo "python3 ${tmp}"; return;fi

#7th priority: file .bin
	tmp=`ls | grep -E "^.*\.bin$" | head -1`
	if [[ $tmp ]];then echo "./${tmp}"; return;fi

#nothing found
	return
}

com=''
args=''
runFile=''


#collecting args
	#->filename
if [[ ${1} && `ls | grep -E "^${1}$"` ]]; then
	if [[ (! $1 == *.cpp) && (`ls | grep $1`) ]];then 
		runFile=${1}
		shift
	fi
fi
	#->run args
while [[ ${1} ]]; do
	args="${args} ${1}"
	shift
done

#choose file and launching method
if [[ ! ${runFile} ]];then
	chosen=`chooseFile`

	if [[ ! ${chosen} ]]; then
		echo "No file found"
		exit
	else
		if [[ `echo ${chosen} | grep -E '(^\./)'` ]];then
			runFile=${chosen:2}
			com='./'
		elif [[ `echo ${chosen} | grep -E '(^make)'` ]];then
			runFile=''
			com="${chosen}"
		else
			runFile=`echo ${chosen} | sed 's/.* //g'`
			com=`echo ${chosen} | sed -E 's/([^ ]+)( *)([^ ]+)/\1 /g'`
		fi
	fi
else 
	com='./'
fi

#checking script executability
if [[ (${runFile}) && (! `ls -l ${runFile} | sed -E 's/(.{9})(.)( .*)/\2/g'` == "x") ]]; then
	chmod +x ${runFile}
fi

#final evaluate
eval "${com}${runFile}${args}"