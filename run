#!/usr/bin/env bash
#_plsDontUploadMe
#_source

#hmm w gruncie rzeczy ma przeszukiwać daną lokalizację i po kolei sprawdzać takie drzewko ewentualności=czy jest w niej plik z pierwszą linijką shebangiem, czy jest tu plik pythonowy, czy są to jedyne pliki, jeśli nie to sprawdzać ich nazwy typu main/run itp. a potem dziad ma uruchamiać to...
#hmm ewentualnie można do tego podejść inaczej-sprawdzać historię i wywoływać ostatnie polecenie wywołujące bezpośrednio lub przez np. python3 plik w danej lokalizacji
#po namyśle jednak lepiej żeby po prostu zbierał wszystkie parametry z którymi się wywołuje i z nimi wywoływał dany skrypt

if [[ $1 == "--help" ]]
then
	echo "Search for file you would like to execute in current dir and runs it with given arguments
just type:					run \$arg1 \$arg2...
or if you want to use last used arguments:	run"
	exit
echo

parameters=''
if [[ ${1::2} == "-_" ]]
then
	parameters=${1 :2}
	shift
fi

#
file_list=`ls | sed 's/ /\n/g'`
script=''

for prime in primeList
if [[ `echo primeList | grep $file` ]]			###na tym mniej więcej skończyłeś
then
	`echo primeList | grep $file | head -1`
fi
	for x in file_list
	do
		if [[ `cat $x | head -1` =~ (#!/usr/bin).* ]]
		then
			script=$x
		fi
	done
fi
echo "ustalanie który plik wywołać"
#

#checking script executability
temp=`ls -l | grep -w $script`
if [[ ! ${temp::4} == "x" ]]
then
	chmod +x $script
fi

#
if [[ (echo $parameters | grep l) && (`ls | grep "${script}_run.log"`) ]]
then
	comm=`cat "${script}_run.log"`
	eval $comm
	exit
fi

parameters=''
for x in $@
do
	parameters="$parameters $x"
done

eval "$comm $script $parameters"

if [[ $? == "0" ]]
then
	echo "$comm $script $parameters" > "${script}_run.log"
fi


#ok więc zrobiłem otoczkę, teraz tyko trzeba zrobić to wykrywanie maina i ewentualne dodawanie $comm w razie np pliku pythonowego

#feature-dodać sprawdzanie czy plik ma wykonywalność i w razie gdyby nie to mu ją udzielać
