#!/usr/bin/env bash

#ogólnie tylko pomysł...coś chyba jak konwerter do header+source

#ma za zadanie przejechać kod i w zależności od języka wychwicić funkcje luźne polecenia, podzielić na sekcje i ustalić z której sekcji jaką inną się wywołuje
#w późniejszym etapie można dodać wyświetlanie tego za pomocą jakiegoś przejrzystego drzewka zależności i nawet dodać kolorowanie poszczególnych metod, bo pewnie będa wywoływane z kilku miejsc(lista z 20 kolorów, iterator po nich i może tabela przypasowania albo coś w rodzaju dynamicznych zmiennych typu $funcName_colour i eval na nich by sprawdzać czy jest puste(czy już został dopasowany-albo definiować przez none...albo po prostu definiować losowo na starcie po kolei))ciastko, mogłem namieszać z nawiasami :p


if [[ ${1::1} == "-" ]]
then
	file=$2
else
	file=$1
fi

displayDependens() {
	functions=$@
}

functions=''
imports=''
main=''
while read -r line			#zczytanie danych(metod, importów)
do
	if [[ ${line::1} == "" ]]
	then						#to nie działa jak myślałem-whatever
		continue
	fi
	if [[ ${line::1} == "#" ]]
	then
		continue
	fi
	if [[ ${line::6} == "import" ]]
	then
		imports="$imports`echo $line | sed 's/import //' | sed 's/,//g'` "
		continue
	fi
	if [[ ${line::4} == "from" ]]
	then
		imports="$imports`echo $line | sed 's/.*import //' | sed 's/,//g'` "
		continue
	fi
	if [[ ${line::4} == "def " ]]
	then
		functions="$functions`echo $line | sed 's/def //' | sed 's/(.*//'` "
		continue
	fi
	if [[ ${line::11} == "if __name__" ]]
	then
		func=${x:18:-4}
		if [[ `echo $functions | grep $func` ]]
		then
			continue
		fi
		functions="$functions$func "
		main=$func
	fi
done < $file

grF=$functions

if [[ -z $main ]]			#próba znalezienia głównej funkcji
then
	for x in $grF
	do
		if [[ $x == "main" ]]
		then
			main=$x
		fi
	done
fi

func=''
while read -r line			#zczytanie zależności
do
	if [[ ${line::4} == "def " ]]
	then
		func=`echo $line | sed 's/def //' | sed 's/(.*//'`
		continue
	fi
	for x in $grF
	do
		if [[ `echo $line | grep $x` ]]
		then
			functions=`echo $functions | sed "s/$func/$func,$x/"`
		fi
	done
done < $file

if [[ -z $main ]]
then
	$functions
fi

disp() {
	dir=`pwd | sed 's/.*\///'`
	functions=" $@"
	for x in `echo $functions | sed 's/ /\n/g' | grep "$dir.*" | sed 's/,/ /g'`
	do
		#touch $x
		if [[ ! (`pwd | grep $x`) ]]
		then
			mkdir $x &> /dev/null
		fi
		
	done
	for x in `ls`
	do
		cd $x
		disp $@			
		cd ..
	done
}

#wyświetlanie zależności za pomocą funkcji tree poprzez stworzenie z zależności trzewa katalogów
mkdir main
#echo $functions
#echo $functions | sed 's/ /\n/g' | grep " get_tags" | sed 's/,/ /g'
cd main
#disp $functions
cd ..
#echo ciastko
#pwd
tree main
rm -rf main
