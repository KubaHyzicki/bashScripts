#!/usr/bin/python3

#w późniejszym etapie można dodać kolorowanie poszczególnych metod, bo pewnie będa wywoływane z kilku miejsc(lista z 20 kolorów, iterator po nich i może tabela #przypasowania albo coś w rodzaju dynamicznych zmiennych typu $funcName_colour i eval na nich by sprawdzać czy jest puste(czy już został dopasowany-albo definiować
#przez none...albo po prostu definiować losowo na starcie po kolei)ciastko

help="""Displays input (for now python only!)files functions in a tree of dependence-which does call the other
WARNING: requires tree installed!!!
type:				functreedisp
to use on specyfic file:	functreedisp \$file.py
to display imports too:		functreedisp -i \$file.py"""

import re
import os
import argparse



class python():
	def __init__(self,file):
		self.file=file

	def run(self):
		print(file)

def main(){
	parser = argparse.ArgumentParser(description=help)
	parser.add_argument('file')
	args = parser.parse_args()
	fileName = args(file)
	file = open(fileName).readlines()

	if re.match(file.splitlines()[0], '#!.*python'):
		obj=python(file)

	obj.run()
}

if __name__ == "__main__":
	# execute only if run as a script
	main()	