#!/usr/bin/env bash
low=~/Documents/mem_low
hight=~/Documents/mem_hight					#dla ważniejszych rzeczy(dla podziału), do późniejszych updatów

if [[ $1 == "--help" ]]
then
	echo "script acting like an additional cache
to see last input type: 	mem
to see n inputs type:		mem -\$n
to write to memory:		mem \$your_input
to clear cache:			mem -c
to see all cache:		mem -a/all
to see last x lines:		mem -\$x"
fi


touch $low
touch $hight
file=$low
lines=1
args=$*								#to nie działa, to trzeba poprawić!!!!
if [[ $1 == "-h" ]]
then
	file=$hight
fi

if [[ `echo $1 | grep -E '\-+[1-9]'` ]]				#eh normalne łapanie cyfr nie działa-wychodzi tylko w ten sposób...działa, ale warto kiedyś na to
then								#spojrzeć w razie znalezienia bardziej przyjaznego rozwiązania(jest też jeszce niżej(znacznik))
	lines=`echo $1 | sed 's/-//'`
fi



if [[ $1 == "-c" ]]
then
	rm $low $hight
	exit
fi

if [[ ($1 == "-a") || ($1 == "-all") ]]
then
	cat $file | sed 's/;/\n/g'
	echo
	exit
fi

if [[ (-z $1) || (`echo $1 | grep -E '\-+[1-9]'`) ]]		#znaczek-łapanie cyfr
then
	if [[ $((`cat $file | wc -l` < $lines)) ]]
	then
		lines=`cat $file | wc -l`	
	fi
	cat $file | tail -$lines | sed 's/;/\n/g'
	echo
	exit
fi

if [[ true ]]
then
	echo >> $file
	printf $args | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/\;/g' >>  $file
fi
