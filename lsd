#!/usr/bin/env bash



if [[ $1 == "--help" ]]
then
	echo "script to search recursively in the current directory for files or fileses insides that matches given pattern
type: 					lsd \$pattern_to_look_for
or when searching files insides: 	lsd -f \$pattern
to set maxdepth:			lsd -d$depth \$pattern
to set files extension:			lsd -t \$pattern \$fileExtension
to use !THE_HARD_REGEX_MODE!:		lsd -E \$pattern
if doubled works for both(grep/find):	lsd -EE \$pattern	#for \"in files\" option
to not ingore case:			lsd -C \$pattern
searching in input files:		lsd -if \$pattern \$file1 \$file2...
----------
also worth to try like: 		cat \$(lsd -f/d \$pattern) | less 
to see all files insides and easly search with \"/\" for multiple occurrence
or:					lsd -if \$inFilePattern \`lsd \$nameFilePattern\` #or other similar searches in \`\` quotes
to research only listed in args files founded by other command"
	exit
fi
if [[ -z $1 ]]
then
	echo "no pattern given, type lsd --help to see more"
	exit
fi

if_sth_founded=0
if [[ -z $2 ]]
then
	pattern=$1
else
	pattern=$2
fi

mssg_not_founded="sorry, no results"


#colored=''					#żeby uwidaczniało te, które pasują idealnie...niby działa, ale jakoś coś chyba za dobrze(czasem)
#if [[ `echo $x | grep -ix $pattern` ]]		#daje pod komentarz, bo zbyt często tej komendy używam i by mnie wkurzało
#then 
#	colored='tput setaf 1'
#fi
#$colored;echo ${dir::-1}/$x






######################################################################
#in files multiinput(pipes usage)
if [[ (${1::1} == "-") && (`echo $1 | grep [i,f][f,i]`) ]]
then
	comm="cat \$file | grep $grepOp \"\$pattern\""
	shift
	pattern=$1
	shift
	for file in $@
	do
		if [[ `eval $comm` ]]
		then
			echo $file
		fi
	done
	exit
fi



######################################################################
#standard
if_sth_founded=0
comm=''
findOp=''

#find options:
if [[ (${1::1} == "-") && (`echo $1 | grep "E"`) ]]
then
	findOpt='regex'
else
	findOpt='name'
fi

if [[ (${1::1} == "-") && (`echo $1 | grep "C"`) ]]
then
	findOpt="$-${findOpt}"
else
	findOpt="$-i${findOpt}"
fi

if [[ (${1::1} == "-") && (`echo $1 | grep "d"`) ]]
then
	depth=`echo $1 | sed -E 's/(.*d)([0-9]+).*/\2/'`
	if [[ $depth ~= ^[0-9]+$ ]]
	then
		echo "no depth given"
		exit
	fi
	depth=${depth::1}
	findOpt="-maxdepth ${depth} ${findOpt}"
fi

######################################################################
#in files
if [[ (${1::1} == "-") && (`echo $1 | grep "f"`) ]]
then
	grepOp=''
	comGrep="find ."
#grep Options:
	if [[ (${1::1} == "-") && (`echo $1 | grep "C"`) ]]
	then
		grepOp="${grepOp}"
	else
		grepOp="${grepOp}i"
	fi

	if [[ (${1::1} == "-") && (`echo $1 | grep "E"`) ]]
	then
		grepOp="${grepOp}E"
	fi

	if [[ !(-z $grepOp) ]]
	then
		grepOp="-$grepOp"
	fi

	comm="cat \$x | grep $grepOp \"\$pattern\""
	for x in `eval comFind`
	do  
	        if [[ ${x::1} == '.' ]]
       		then
	                dir=$x
        		continue
		fi
		if [[ `eval $comm` ]]
       		then
	                echo ${dir::-1}/$x
        	        if_sth_founded=1
	        fi
	done
	
	if [[ $if_sth_founded == 0 ]]
	then
	        echo $mssg_not_founded
	fi
	
	exit
fi

if [[ true ]]
then
	comm="find ${findOpt} ${pattern}"
	results=`eval $comm`
	if [[ $results == '' ]]
	then
		echo ${results}
	else
		echo ${mssg_not_founded}
	fi
fi
